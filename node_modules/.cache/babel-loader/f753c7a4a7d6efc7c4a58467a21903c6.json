{"ast":null,"code":"var _jsxFileName = \"/Users/umutoztunc/Desktop/shibArmy/COMP491_Project_FrontEnd/src/components/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { login } from \"../services/auth.service\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const initialValues = {\n    username: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"This field is required!\"),\n    password: Yup.string().required(\"This field is required!\")\n  });\n\n  const handleLogin = formValue => {\n    const {\n      username,\n      password\n    } = formValue;\n    setMessage(\"\");\n    setLoading(true);\n    login(username, password).then(() => {\n      history.push(\"/profile\");\n      window.location.reload();\n    }, error => {\n      const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      setLoading(false);\n      setMessage(resMessage);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-12\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card card-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n        alt: \"profile-img\",\n        className: \"profile-img-card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: handleLogin,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"username\",\n              type: \"text\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              name: \"password\",\n              type: \"password\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"alert alert-danger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary btn-block\",\n              disabled: loading,\n              children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger\",\n              role: \"alert\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontStyle: \"italic\",\n              textAlign: \"center\"\n            },\n            children: [\"Still do not have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/register\",\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 45\n            }, this), \" here!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"aahTtd7vobzsyrQXSpsjHR+FvKo=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/umutoztunc/Desktop/shibArmy/COMP491_Project_FrontEnd/src/components/Login.tsx"],"names":["React","useState","Formik","Field","Form","ErrorMessage","Yup","login","Link","Login","history","loading","setLoading","message","setMessage","initialValues","username","password","validationSchema","object","shape","string","required","handleLogin","formValue","then","push","window","location","reload","error","resMessage","response","data","toString","fontStyle","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { login } from \"../services/auth.service\";\nimport { Link, RouteComponentProps } from \"react-router-dom\";\n\ninterface RouterProps {\n  history: string;\n}\n\ntype Props = RouteComponentProps<RouterProps>;\n\nconst Login: React.FC<Props> = ({ history }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n\n  const initialValues: {\n    username: string;\n    password: string;\n  } = {\n    username: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    username: Yup.string().required(\"This field is required!\"),\n    password: Yup.string().required(\"This field is required!\"),\n  });\n\n  const handleLogin = (formValue: { username: string; password: string }) => {\n    const { username, password } = formValue;\n\n    setMessage(\"\");\n    setLoading(true);\n\n    login(username, password).then(\n      () => {\n        history.push(\"/profile\");\n        window.location.reload();\n      },\n      (error) => {\n        const resMessage =\n          (error.response &&\n            error.response.data &&\n            error.response.data.message) ||\n          error.message ||\n          error.toString();\n\n        setLoading(false);\n        setMessage(resMessage);\n      }\n    );\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleLogin}\n        >\n          <Form>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Field name=\"username\" type=\"text\" className=\"form-control\" />\n              <ErrorMessage\n                name=\"username\"\n                component=\"div\"\n                className=\"alert alert-danger\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Field name=\"password\" type=\"password\" className=\"form-control\" />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"alert alert-danger\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-block\"\n                disabled={loading}\n              >\n                {loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n\n            <div style={{\n              fontStyle: \"italic\",\n              textAlign: \"center\",\n            }}>\n              Still do not have an account? <Link to=\"/register\" style={{\n                fontWeight: \"bold\",\n              }}>Register</Link> here!\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}